use("commerce");
db.produtos
  .find(
    {},
    {
      _id: false,
      nome: true,
      vendidos: true,
    },
  )
  .sort({ vendidos: 1 });

db.produtos
  .find(
    {},
    {
      _id: false,
      nome: true,
      vendidos: true,
    },
  )
  .sort({ vendidos: -1 })
  .limit(1);

db.produtos
  .find(
    { vendidos: { $gt: 50, $lt: 100 } },
    {
      _id: false,
      nome: true,
      vendidos: true,
    },
  )
  .sort({ vendidos: 1 });

// * Req 05
db.produtos
  .find(
    {
      $or: [
        { curtidas: { $eq: 36 } }, 
        { vendidos: { $eq: 85 } },
      ],
    },
    {
      _id: false,
      nome: true,
      curtidas: true,
      vendidos: true,
    },
  );

// * req 06
db.produtos
  .find(
    { curtidas: { $gt: 10, $lt: 100 } },
    {
      _id: false,
      nome: true,
      curtidas: true,
    },
  );

// * Req 07
db.produtos
  .find(
    {
      $and: [
        { vendidos: { $ne: 50 } }, 
        { tags: { $exists: false } },
      ],
    },
    {
      _id: false,
      nome: true,
      vendidos: true,
    },
  );

// * req 8
// db.produtos.deleteMany(
//   { curtidas: { $lt: 50 } },
//   );

db.produtos.find(
    {},
    { 
      _id: false,
      nome: true,
    },
  );

  use("commerce");
db.produtos.find(
  { valoresNutricionais: { 
      $elemMatch: { 
        tipo: { $eq: "calorias" },
        quantidade: { $lt: 500 },
      } },
    },
  {
    _id: false,
    nome: true,
  },
);

db.produtos.find(
  { valoresNutricionais: { 
      $elemMatch: { 
        tipo: { $eq: "proteínas" },
        percentual: { $gt: 30, $lte: 40 },
      } },
    },
  {
    _id: false,
    nome: true,
  },
);

db.produtos.find(
  { nome: { $nin: ["Big Mac", "McChicken"] } },
  {
    _id: false,
    nome: true,
    curtidas: true,
    vendidos: true,
  },
);

db.produtos.updateMany(
  { nome: { $nin: ["McChicken"] } },
  { $addToSet: { ingredientes: "ketchup" } },    
);

db.produtos.find(
  {},
  { 
    _id: false,
    nome: true,
    ingredientes: true,
  },    
);

db.produtos.updateMany(
  {},
  { $set: { criadoPor: "Ronald McDonald" } },    
);

db.produtos.find(
  { 
    ingredientes: { $in: ["picles"] },
  },
  { 
    _id: false,
    nome: true,
    ingredientes: true,
    valoresNutricionais: { $slice: 3 },
  }, 
);
// * criando campo
db.produtos.updateMany(
  {},
  { $set: { avaliacao: 0 } },    
);

// * incrementando
db.produtos.updateMany(
  { tags: "bovino" },
  { $inc: { avaliacao: 5 } },    
);

db.produtos.updateMany(
  { tags: "ave" },
  { $inc: { avaliacao: 3 } },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    avaliacao: true,
  },    
);

db.produtos.find(
  { nome: "Big Mac" },
  {},    
);

db.produtos.updateMany(
  { nome: "Big Mac" },
  { $currentDate: { 
    ultimaModificacao: { $type: "date" }, 
  } },    
);

db.produtos.find(
  { ultimaModificacao: { $exists: true } },
  { 
    _id: false,
    nome: true,
  },    
);

//! OPICIONAL: db.createCollection("resumoProdutos");

// db.resumoProdutos.insertOne(
//   {
//     franquia: "McDonalds",
//     totalProdutos: db.produtos.countDocuments({}),
//   },
// );

// db.resumoProdutos.find(
//   {},
//   {
//     _id: false,
//   },  
// );

// db.produtos.updateMany(
//   { nome: { $in: ["Big Mac", "Quarteirão com Queijo"] } },
//   { $push: { ingredientes: "bacon" } },    
// );

// db.produtos.find(
//   {},
//   {
//     _id: false,
//     nome: true,
//     ingredientes: true,
//   },  
// );

db.produtos.updateMany(
  {},
  { $pull: { ingredientes: "cebola" } },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    ingredientes: true,
  },  
);

db.produtos.updateMany(
  { nome: "Quarteirão com Queijo" },
  { $pop: { ingredientes: -1 } },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    ingredientes: true,
  },  
);

db.produtos.updateMany(
  { nome: "Cheddar McMelt" },
  { $pop: { ingredientes: 1 } },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    ingredientes: true,
  },  
);

db.produtos.updateMany(
  {},
  { $set: { vendasPorDia: [0, 0, 0, 0, 0, 0, 0] } },
);

db.produtos.updateMany(
  { nome: "Big Mac" },
  { $inc: { "vendasPorDia.3": 60 } },    
);

db.produtos.updateMany(
  { tags: "bovino" },
  { $inc: { "vendasPorDia.6": 120 } },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    vendasPorDia: true,
  },  
);

// db.produtos.updateMany(
//   {},
//   { $push: { 
//       tags: {
//         $each: ["combo", "tasty"],
//         $sort: 1,
//       }, 
//     },
//   },    
// );

// db.produtos.find(
//   {},
//   {
//     _id: false,
//     nome: true,
//     tags: true,
//   },
// );

db.produtos.updateMany(
  {},
  {
    $push: { 
      valoresNutricionais: {
        $each: [],
        $sort: { percentual: -1 },
      },
    },
  },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    valoresNutricionais: true,
  },
);

db.produtos.updateMany(
  { valoresNutricionais: { 
      $elemMatch: { 
        tipo: { $eq: "sódio" },
        percentual: { $gte: 40 },
      },
    },
  },
  { $push: { tags: "muito sódio" },
  },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    tags: true,
  },
);

db.produtos.updateMany(
  { valoresNutricionais: { 
      $elemMatch: { 
        tipo: { $eq: "sódio" },
        percentual: { $gt: 20, $lt: 40 },
      },
    },
  },
  { $push: { tags: "contém sódio" },
  },    
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    tags: true,
  },
);

db.produtos.countDocuments(
  { nome: { $regex: /Mc/ } },
);

db.produtos.countDocuments(
  { ingredientes: { $size: 4 } },
);

db.produtos.updateMany(
  {},
  {
    $rename: { descricao: "descricaoSite" },
  },
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    descricaoSite: true,
  },
);

db.produtos.updateMany(
  { nome: "Big Mac" },
  { $unset: { curtidas: "" } },
);

db.produtos.find(
  {},
  {
    _id: false,
    nome: true,
    curtidas: true,
  },
);

db.produtos.find(
  { vendidos: { $mod: [5, 0] } },
  {
    _id: false,
    nome: true,
    vendidos: true,
  },
);

db.produtos.updateMany(
  {},
  { $set: { vendasPorDia: [0, 0, 0, 0, 0, 0, 0] } },
);

db.produtos.updateMany(
  { nome: "Big Mac" },
  { $inc: { "vendasPorDia.3": 60 } },    
);

db.produtos.updateMany(
  { tags: "bovino" },
  { $inc: { "vendasPorDia.6": 120 } },    
);

// db.produtos.find();